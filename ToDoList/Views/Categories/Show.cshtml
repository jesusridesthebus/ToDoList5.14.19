@using ToDoList.Models;

<h1>To Do List</h1>
<h2>Category: @Model["category"].GetName()</h2>
<hr />

@if (@Model["categoryItems"].Count != 0)
{
  <h4>Here are all the items in this category:</h4>
  <ul>
    @foreach (var item in @Model["categoryItems"])
    {
      <li>@item.GetDescription()</li>
    }
  </ul>
}

<h4>Add a new item to this category:</h4>
<form action="/items" method="post">
  @* <form action='/categories/@Model["category"].GetId()/items/new' method="post"> *@

  <input for="hiddenId" id="hiddenId" name="hiddenId" type="hidden" value="@Model["category"].GetId()">
  <label for="description">Item description:</label>
  <input id="description" name="description" type="text">
  <button type="submit">Add new item</button>
</form>

<h4>Add an existing item to this category:</h4>
<form action='/categories/@Model["category"].GetId()/items/new' method='post'>
  <label for='itemId'>Select an item</label>
  <select id='itemId' name='itemId' type='text'>
    @foreach (var item in @Model["allItems"])
    {
      <option value='@item.GetId()'>@item.GetDescription()</option>
    }
  </select>
  <button type='submit'>Add</button>
</form>

<p><a href='/categories'>Return to category list</a></p>
<p><a href='/'>Return to Main Page</a></p>
